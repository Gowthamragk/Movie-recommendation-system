[{"D:\\temp\\movie_temp\\client\\src\\index.js":"1","D:\\temp\\movie_temp\\client\\src\\serviceWorker.js":"2","D:\\temp\\movie_temp\\client\\src\\components\\App.js":"3","D:\\temp\\movie_temp\\client\\src\\components\\i18n.js":"4","D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\Spinner.js":"5","D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"6","D:\\temp\\movie_temp\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"7","D:\\temp\\movie_temp\\client\\src\\components\\views\\GenresPage\\GenresPage.js":"8","D:\\temp\\movie_temp\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"9","D:\\temp\\movie_temp\\client\\src\\components\\views\\ResetPassword\\Reset.js":"10","D:\\temp\\movie_temp\\client\\src\\_reducers\\index.js":"11","D:\\temp\\movie_temp\\client\\src\\components\\NotFound.js":"12","D:\\temp\\movie_temp\\client\\src\\components\\views\\ResetPassword\\ResetPassword.js":"13","D:\\temp\\movie_temp\\client\\src\\hoc\\auth.js":"14","D:\\temp\\movie_temp\\client\\src\\components\\views\\NavBar\\NavBar.js":"15","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\MovieDetail.js":"16","D:\\temp\\movie_temp\\client\\src\\components\\views\\Footer\\Footer.js":"17","D:\\temp\\movie_temp\\client\\src\\components\\views\\FavoritePage\\FavoritePage.js":"18","D:\\temp\\movie_temp\\client\\src\\components\\views\\Confirmation\\Confirmation.js":"19","D:\\temp\\movie_temp\\client\\src\\components\\views\\ProfilePage\\ProfilePage.js":"20","D:\\temp\\movie_temp\\client\\src\\components\\views\\UsersPage\\UsersPage.js":"21","D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\StyledSpinner.js":"22","D:\\temp\\movie_temp\\client\\src\\components\\Config.js":"23","D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\MainImage.js":"24","D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\SearchBar.js":"25","D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\hooks\\useFetchMovies.js":"26","D:\\temp\\movie_temp\\client\\src\\components\\commons\\GridCards.js":"27","D:\\temp\\movie_temp\\client\\src\\_reducers\\user_reducer.js":"28","D:\\temp\\movie_temp\\client\\src\\_actions\\user_actions.js":"29","D:\\temp\\movie_temp\\client\\src\\components\\views\\GenresPage\\hooks\\useFetchByGenre.js":"30","D:\\temp\\movie_temp\\client\\src\\components\\views\\ProfilePage\\ResetPass.js":"31","D:\\temp\\movie_temp\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"32","D:\\temp\\movie_temp\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"33","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\style.js":"34","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\LikeDislikes.js":"35","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\Similar.js":"36","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\MovieInfo.js":"37","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\Recommended.js":"38","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\Comments.js":"39","D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\StyledSearchBar.js":"40","D:\\temp\\movie_temp\\client\\src\\_actions\\types.js":"41","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\ReplyComment.js":"42","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\SingleComment.js":"43","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\Favorite.js":"44"},{"size":1831,"mtime":1720850782434,"results":"45","hashOfConfig":"46"},{"size":5227,"mtime":1720850782442,"results":"47","hashOfConfig":"46"},{"size":2697,"mtime":1720850782388,"results":"48","hashOfConfig":"46"},{"size":951,"mtime":1720850782391,"results":"49","hashOfConfig":"46"},{"size":139,"mtime":1720850782404,"results":"50","hashOfConfig":"46"},{"size":14519,"mtime":1720850782401,"results":"51","hashOfConfig":"46"},{"size":5847,"mtime":1720850782408,"results":"52","hashOfConfig":"46"},{"size":8795,"mtime":1720850782398,"results":"53","hashOfConfig":"46"},{"size":12265,"mtime":1720850782427,"results":"54","hashOfConfig":"46"},{"size":8272,"mtime":1720850782428,"results":"55","hashOfConfig":"46"},{"size":164,"mtime":1720850782385,"results":"56","hashOfConfig":"46"},{"size":380,"mtime":1720850782389,"results":"57","hashOfConfig":"46"},{"size":6640,"mtime":1720850782429,"results":"58","hashOfConfig":"46"},{"size":975,"mtime":1720850782433,"results":"59","hashOfConfig":"46"},{"size":1909,"mtime":1720850782420,"results":"60","hashOfConfig":"46"},{"size":9686,"mtime":1720850782410,"results":"61","hashOfConfig":"46"},{"size":398,"mtime":1720850782397,"results":"62","hashOfConfig":"46"},{"size":4300,"mtime":1720850782394,"results":"63","hashOfConfig":"46"},{"size":2389,"mtime":1720850782393,"results":"64","hashOfConfig":"46"},{"size":11826,"mtime":1720850782425,"results":"65","hashOfConfig":"46"},{"size":1743,"mtime":1720850782431,"results":"66","hashOfConfig":"46"},{"size":463,"mtime":1720850782406,"results":"67","hashOfConfig":"46"},{"size":503,"mtime":1720850782388,"results":"68","hashOfConfig":"46"},{"size":2070,"mtime":1720850782403,"results":"69","hashOfConfig":"46"},{"size":1358,"mtime":1720850782403,"results":"70","hashOfConfig":"46"},{"size":3416,"mtime":1720850782407,"results":"71","hashOfConfig":"46"},{"size":3200,"mtime":1720850782390,"results":"72","hashOfConfig":"46"},{"size":668,"mtime":1720850782386,"results":"73","hashOfConfig":"46"},{"size":2411,"mtime":1720850782384,"results":"74","hashOfConfig":"46"},{"size":1689,"mtime":1720850782400,"results":"75","hashOfConfig":"46"},{"size":7199,"mtime":1720850782426,"results":"76","hashOfConfig":"46"},{"size":780,"mtime":1720850782421,"results":"77","hashOfConfig":"46"},{"size":4960,"mtime":1720850782423,"results":"78","hashOfConfig":"46"},{"size":2146,"mtime":1720850782419,"results":"79","hashOfConfig":"46"},{"size":3133,"mtime":1720850782413,"results":"80","hashOfConfig":"46"},{"size":2900,"mtime":1720850782417,"results":"81","hashOfConfig":"46"},{"size":7845,"mtime":1720850782414,"results":"82","hashOfConfig":"46"},{"size":2923,"mtime":1720850782415,"results":"83","hashOfConfig":"46"},{"size":3535,"mtime":1720850782411,"results":"84","hashOfConfig":"46"},{"size":1039,"mtime":1720850782405,"results":"85","hashOfConfig":"46"},{"size":213,"mtime":1720850782383,"results":"86","hashOfConfig":"46"},{"size":1994,"mtime":1720850782416,"results":"87","hashOfConfig":"46"},{"size":5167,"mtime":1720850782418,"results":"88","hashOfConfig":"46"},{"size":3968,"mtime":1720850782412,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"2wba1i",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},"D:\\temp\\movie_temp\\client\\src\\index.js",[],["186","187"],"D:\\temp\\movie_temp\\client\\src\\serviceWorker.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\App.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\i18n.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\Spinner.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["188"],"import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialUsername = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        username: Yup.string()\r\n          .min(2, t('login.usernameErr'))\r\n          .required(t('login.usernameErr2')),\r\n        password: Yup.string()\r\n          .min(4, t('login.passwordErr'))\r\n          .required(t('login.passwordErr2')),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            username: values.username,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                props.history.push(\"/landing\");\r\n              } else {\r\n                setFormErrorMessage(t('login.formErr'))\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage(t('login.formErr'))\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"loginbg\">\r\n            <div className=\"login\">\r\n              <Title level={3} style={{textAlign: \"center\"}}>{t('login.login')}</Title>\r\n              <form onSubmit={handleSubmit}>\r\n\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"username\"\r\n                    prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder={t('login.username')}\r\n                    type=\"text\"\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.username && touched.username ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.username && touched.username && (\r\n                    <div className=\"input-feedback\">{errors.username}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required>\r\n                  <Input\r\n                    id=\"password\"\r\n                    prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder={t('login.password')}\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\">{errors.password}</div>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                {formErrorMessage && (\r\n                  <label ><p style={{ color: '#ff0000bf', textAlign: 'center', fontSize: '0.8rem', border: '1px solid', padding: '0.5rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n                )}\r\n\r\n                <Form.Item>\r\n                  <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe}>{t('login.remember')}</Checkbox>\r\n                  <a className=\"login-form-forgot\" href=\"/forgot\" style={{ float: 'right' }}>\r\n                    {t('login.forgot')}\r\n                  </a>\r\n                  <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                      {t('login.login')}\r\n                    </Button>\r\n                  </div>\r\n                Or <a href=\"/register\">{t('login.registernow')}</a>\r\n                </Form.Item>\r\n\r\n                <h3>{t('login.connect')}</h3>\r\n\r\n                <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n                <label ><p style={{ color: '#ff0000bf', backgroundColor: 'white', textAlign: 'center', fontSize: '0.85rem', border: '1px solid', padding: '0.5rem', borderRadius: '10px' }}>\r\n                Welcome to the Live Demo.<br />\r\n                  You can sign up now or use the following credentials:<br />\r\n                  <b>Username:</b> test <br />\r\n                  <b>Password:</b> test</p></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);","D:\\temp\\movie_temp\\client\\src\\components\\views\\GenresPage\\GenresPage.js",["189"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Typography, Row, Button } from 'antd';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, IMAGE_SIZE, CurrentLanguage } from '../../Config'\r\nimport { useTranslation } from 'react-i18next';\r\nimport MainImage from '../../views/LandingPage/Sections/MainImage'\r\nimport GridCard from '../../commons/GridCards';\r\nimport SearchBar from '../LandingPage/Sections/SearchBar';\r\nimport Spinner from '../LandingPage/Sections/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n// Hooks\r\nimport { useFetchByGenre } from './hooks/useFetchByGenre';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst GenresPage = () => {\r\n    let { genreId, genreName, movieId } = useParams();\r\n    const [{ state: { Movies, MainMovieImage, CurrentPage, totalPages },\r\n        loading,\r\n        error },\r\n        fetchMoviesByGenre\r\n    ] = useFetchByGenre(genreId);\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        history.push(`/movie/${movieId}`);\r\n    }\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const buttonRef = useRef(null);\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n    }, [])\r\n\r\n    const genres = [\r\n        { id: 28, name: t('genre.Action') },\r\n        { id: 12, name: t('genre.Adventure') },\r\n        { id: 16, name: t('genre.Animation') },\r\n        { id: 35, name: t('genre.Comedy') },\r\n        { id: 80, name: t('genre.Crime') },\r\n        { id: 99, name: t('genre.Documentary') },\r\n        { id: 18, name: t('genre.Drama') },\r\n        { id: 10751, name: t('genre.Family') },\r\n        { id: 14, name: t('genre.Fantasy') },\r\n        { id: 36, name: t('genre.History') },\r\n        { id: 27, name: t('genre.Horror') },\r\n        { id: 10402, name: t('genre.Music') },\r\n        { id: 9648, name: t('genre.Mystery') },\r\n        { id: 10749, name: t('genre.Romance') },\r\n        { id: 878, name: t('genre.Sci-Fi') },\r\n        { id: 10770, name: t('genre.TV-Movie') },\r\n        { id: 53, name: t('genre.Thriller') },\r\n        { id: 10752, name: t('genre.War') },\r\n        { id: 37, name: t('genre.Western') },\r\n    ];\r\n\r\n    const searchMovies = search => {\r\n        // const endpoint = search ? `${API_URL}search/movie?api_key=${API_KEY}&language=${CurrentLanguage}&with_genres=${genreId}&query=` + search : `${API_URL}discover/movie?api_key=${API_KEY}&language=${CurrentLanguage}&with_genres=${genreId}`\r\n        const endpoint = search ? `${API_URL}search/movie?api_key=${API_KEY}&with_genres=${genreId}&query=` + search : `${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}`\r\n        setSearchTerm(search)\r\n        fetchMoviesByGenre(endpoint)\r\n    }\r\n\r\n    const loadMoreMovies = () => {\r\n        const genresEndpoint = `${API_URL}discover/movie?api_key=${API_KEY}&with_genres=${genreId}&page=${CurrentPage + 1}`;\r\n        const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&with_genres=${genreId}&query=${searchTerm}&page=${CurrentPage + 1}`\r\n        const endpoint = searchTerm ? searchEndpoint : genresEndpoint\r\n        fetchMoviesByGenre(endpoint);\r\n    }\r\n\r\n    const handleScroll = e => {\r\n        const windowHeight =\r\n            'innerHeight' in window\r\n                ? window.innerHeight\r\n                : document.documentElement.offsetHeight;\r\n\r\n        const body = document.body;\r\n        const html = document.documentElement;\r\n\r\n        const docHeight = Math.max(\r\n            body.scrollHeight,\r\n            body.offsetHeight,\r\n            html.clientHeight,\r\n        );\r\n\r\n        const windowBottom = windowHeight + window.pageYOffset;\r\n\r\n        if (windowBottom >= docHeight - 1) {\r\n            buttonRef.current && buttonRef.current.click();\r\n        }\r\n    };\r\n\r\n    const MovieIcon = createFromIconfontCN({\r\n        scriptUrl: '//at.alicdn.com/t/font_1804216_tqdqw1tcevm.js',\r\n    });\r\n\r\n    if (error) return <div>Something went wrong...</div>;\r\n    return (\r\n        <div style={{ width: '100%', margin: '0' }}>\r\n            {!loading ? MainMovieImage !== null &&\r\n                <MainImage genre\r\n                    image={MainMovieImage.backdrop_path ? `${IMAGE_BASE_URL}${IMAGE_SIZE}${MainMovieImage.backdrop_path}` : \"https://res.cloudinary.com/dkyqbngya/image/upload/v1586787757/detykqycj7ejezsjmxln.png\"}\r\n                    genreName={genreName}\r\n                />\r\n                :\r\n                <div><Spinner /></div>\r\n            }\r\n\r\n                <SearchBar callback={searchMovies} />\r\n\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button type=\"primary\" shape=\"round\" style={{ fontSize: '1rem' }}><a href=\"/landing\">{t('genre.landing')}</a></Button>\r\n            </div>\r\n\r\n            <div style={{ width: '85%', margin: '1rem auto' }}>\r\n\r\n                {!loading ?\r\n                    <React.Fragment>\r\n                        <Title level={2}><MovieIcon type=\"icon-movie3\" style={{ fontSize: \"35px\", paddingRight: \"10px\" }} />{searchTerm ? t('landing.searchRes') : genreName}</Title>\r\n                        <hr />\r\n                        <br />\r\n                    </React.Fragment>\r\n                    :\r\n                    null}\r\n\r\n                <Row gutter={[16, 16]}>\r\n                    {Movies[0] ? Movies && Movies.map((movie, index) => (\r\n                        <React.Fragment key={movie.id}>\r\n                            {movie && movie.poster_path && movie.release_date && movie.vote_count > 2300\r\n                                && movie.imdb_id !== null && movie.backdrop_path !== null && movie.overview !== null && (\r\n                                    <GridCard movie\r\n                                        onClick={handleClick}\r\n                                        image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : t('landing.notAvail')}\r\n                                        movieId={movie.id}\r\n                                        movieName={movie.title}\r\n                                        date={movie.release_date}\r\n                                        vote={movie.vote_average ? movie.vote_average : 'N/A'}\r\n                                        movieGenre={movie.genre_ids &&\r\n                                            movie.genre_ids.length &&\r\n                                            movie.genre_ids.map(genreID => (\r\n                                                <span key={genreID}>\r\n                                                    {genres.map(\r\n                                                        genre =>\r\n                                                            genreID === genre.id && (\r\n                                                                <Link key={genre.name} to={`/landing/genre/${genre.name}/${genre.id}`}>\r\n                                                                    <Button\r\n                                                                        key={genre.name}\r\n                                                                        shape=\"round\"\r\n                                                                        size=\"small\"\r\n                                                                        style={{ borderColor: \"#19ba90\", textAlign: \"center\", fontSize: \"0.9em\", margin: \"1px\" }}\r\n                                                                    >{genre.name}\r\n                                                                    </Button>\r\n                                                                </Link>\r\n                                                            )\r\n                                                    )}\r\n                                                </span>\r\n                                            )).slice(0, 3)}\r\n                                    />)\r\n                            }\r\n                        </React.Fragment>\r\n                    )) : !Movies[0] && !loading && <div style={{ width: '100%', fontSize: '1.5rem', height: '200px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>{t(\"landing.noresults\")}</div>}\r\n                </Row>\r\n\r\n                {loading && <Spinner />}\r\n                {CurrentPage < totalPages && !loading && (\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <div ref={buttonRef} className=\"loadMore\" onClick={loadMoreMovies}>{t('landing.loadmore')}</div>\r\n                    </div>\r\n                )}\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenresPage;","D:\\temp\\movie_temp\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\ResetPassword\\Reset.js",[],"D:\\temp\\movie_temp\\client\\src\\_reducers\\index.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\NotFound.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\ResetPassword\\ResetPassword.js",[],"D:\\temp\\movie_temp\\client\\src\\hoc\\auth.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\MovieDetail.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\Footer\\Footer.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\FavoritePage\\FavoritePage.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\Confirmation\\Confirmation.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\ProfilePage\\ProfilePage.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\UsersPage\\UsersPage.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\StyledSpinner.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\Config.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\MainImage.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\SearchBar.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\hooks\\useFetchMovies.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\commons\\GridCards.js",[],"D:\\temp\\movie_temp\\client\\src\\_reducers\\user_reducer.js",[],"D:\\temp\\movie_temp\\client\\src\\_actions\\user_actions.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\GenresPage\\hooks\\useFetchByGenre.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\ProfilePage\\ResetPass.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\style.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\LikeDislikes.js",["190","191"],"import React, { useEffect, useState } from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LikeTwoTone } from \"@ant-design/icons\";\r\nimport { DislikeTwoTone } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction LikeDislikes(props) {\r\n\tconst { t } = useTranslation();\r\n\tconst user = useSelector(state => state.user);\r\n\tconst [Likes, setLikes] = useState(0);\r\n\tconst [Dislikes, setDislikes] = useState(0);\r\n\r\n\tlet variable = {};\r\n\r\n\tif (props.video) {\r\n\t\tvariable = { videoId: props.videoId, userId: props.userId };\r\n\t} else {\r\n\t\tvariable = { commentId: props.commentId, userId: props.userId };\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet mounted = true;\r\n\t\tconst getLikes = () => {\r\n\t\t\tAxios.post(\"/api/like/getLikes\", variable)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\t\tmounted && setLikes(response.data.likes.length);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tgetLikes();\r\n\t\treturn () => { mounted = false; }\r\n\t}, [props, variable]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet mounted = true;\r\n\t\tconst getDislikes = () => {\r\n\t\t\tAxios.post(\"/api/like/getDislikes\", variable)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\t\tmounted && setDislikes(response.data.dislikes.length);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tgetDislikes();\r\n\t\treturn () => { mounted = false; }\r\n\t}, [props, variable]);\r\n\r\n\tconst onLike = () => {\r\n\t\tif (user.userData && !user.userData.isAuth) {\r\n\t\t\treturn props.history.push(\"/login\");;\r\n\t\t}\r\n\t\tAxios.post(\"/api/like/upLike\", variable)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tif (response.data.up === true) {\r\n\t\t\t\t\t\tsetLikes(Likes + 1);\r\n\t\t\t\t\t\tif (Dislikes !== 0) {\r\n\t\t\t\t\t\t\tsetDislikes(Dislikes - 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetLikes(Likes - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn props.history.push(\"/login\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst onDisLike = () => {\r\n\t\tif (user.userData && !user.userData.isAuth) {\r\n\t\t\treturn props.history.push(\"/login\");\r\n\t\t}\r\n\t\tAxios.post(\"/api/like/upDisLike\", variable)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tif (response.data.up === true) {\r\n\t\t\t\t\t\tsetDislikes(Dislikes + 1);\r\n\t\t\t\t\t\tif (Likes !== 0) {\r\n\t\t\t\t\t\t\tsetLikes(Likes - 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetDislikes(Dislikes - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn props.history.push(\"/login\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<span key=\"comment-basic-like\">\r\n\t\t\t\t<Tooltip title={t(\"movie.like\")}>\r\n\t\t\t\t\t<LikeTwoTone\r\n\t\t\t\t\t\ttwoToneColor=\"#19ba90\"\r\n\t\t\t\t\t\ttype=\"like\"\r\n\t\t\t\t\t\tonClick={onLike}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}>{Likes}</span>\r\n\t\t\t</span>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t<span key=\"comment-basic-dislike\">\r\n\t\t\t\t<Tooltip title={t(\"movie.dislike\")}>\r\n\t\t\t\t\t<DislikeTwoTone\r\n\t\t\t\t\t\ttwoToneColor=\"#19ba90\"\r\n\t\t\t\t\t\ttype=\"dislike\"\r\n\t\t\t\t\t\tonClick={onDisLike}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}>{Dislikes}</span>\r\n\t\t\t</span>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default LikeDislikes;","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\Similar.js",["192"],"import React from 'react';\r\nimport { API_KEY, CurrentLanguage , IMAGE_BASE_URL, POSTER_SIZE} from '../../../Config'\r\nimport { withTranslation } from 'react-i18next';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { Typography, Row } from 'antd';\r\nimport GridCard from '../../../commons/GridCards'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst MovieIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_1804216_cpuj79al49d.js',\r\n});\r\n\r\nclass SimilarMovies extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: ''\r\n        }\r\n\r\n        if (props.type === 'Similar Movies') {\r\n            fetch('https://api.themoviedb.org/3/movie/' + this.props.urlParams + '/similar?api_key=' + API_KEY)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.setState({ data: res.results });\r\n                })\r\n                .catch(error => console.error('Error:', error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props\r\n        if (!this.state.data) return \"\";\r\n        if (this.state.data === '') return ('');\r\n        else {\r\n            let data_arr = [];\r\n            for (let i in this.state.data.slice(0, 5)) {\r\n                if (this.state.data[i].vote_count > 2300 && this.state.data[i].backdrop_path !== null && this.state.data[i].overview !== null)\r\n\r\n                    data_arr.push(\r\n                        <React.Fragment key={i}>\r\n                        <GridCard movie\r\n                        className=\"similar_movies\"\r\n                            image={ this.state.data[i].poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${ this.state.data[i].poster_path}` : t('landing.notAvail')}\r\n                            movieId={ this.state.data[i].id}\r\n                            movieName={ this.state.data[i].title}\r\n                            date={ this.state.data[i].release_date}\r\n                            vote={ this.state.data[i].vote_average ?  this.state.data[i].vote_average : 'N/A'}\r\n                        />\r\n                        </React.Fragment>\r\n                    )\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <Title level={3}><MovieIcon type=\"icon-movie\" style={{ fontSize: \"35px\", paddingRight: \"10px\" }} />{t('movie.similar')}</Title>\r\n                    <hr />\r\n                    <br />\r\n                    <Row gutter={[16, 16]}>\r\n                        {this.state.data.length === 0 ? \r\n                        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100px' }}>\r\n                            {t(\"movie.similarNone\")}\r\n                            </div> : data_arr }\r\n                    </Row>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withTranslation()(SimilarMovies);","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\MovieInfo.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\Recommended.js",["193"],"import React from 'react';\r\nimport { API_KEY, CurrentLanguage , IMAGE_BASE_URL, POSTER_SIZE} from '../../../Config'\r\nimport { withTranslation } from 'react-i18next';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { Typography, Row } from 'antd';\r\nimport GridCard from '../../../commons/GridCards'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst MovieIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_1804216_cpuj79al49d.js',\r\n});\r\n\r\nclass RecommendedMovies extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: ''\r\n        }\r\n\r\n        if (props.type === 'Recommended Movies') {\r\n            fetch('https://api.themoviedb.org/3/movie/' + this.props.urlParams + '/recommendations?api_key=' + API_KEY)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.setState({ data: res.results });\r\n                })\r\n                .catch(error => console.error('Error:', error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props\r\n        // if (!this.state.data) return \"\";\r\n        if (this.state.data === '') return ('');\r\n        else {\r\n            let data_arr = [];\r\n            for (let i in this.state.data.slice(0, 5)) {\r\n                if (this.state.data[i].vote_count > 2300 && this.state.data[i].backdrop_path !== null && this.state.data[i].overview !== null)\r\n\r\n                    data_arr.push(\r\n                        <React.Fragment key={i}>\r\n                        <GridCard movie\r\n                        className=\"similar_movies\"\r\n                            image={ this.state.data[i].poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${ this.state.data[i].poster_path}` : t('landing.notAvail')}\r\n                            movieId={ this.state.data[i].id}\r\n                            movieName={ this.state.data[i].title}\r\n                            date={ this.state.data[i].release_date}\r\n                            vote={ this.state.data[i].vote_average ?  this.state.data[i].vote_average : 'N/A'}\r\n                        />\r\n                        </React.Fragment>\r\n                    )\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <Title level={3}><MovieIcon type=\"icon-movie\" style={{ fontSize: \"35px\", paddingRight: \"10px\" }} />{t('movie.recommended')}</Title>\r\n                    <hr />\r\n                    <br />\r\n                    <Row gutter={[16, 16]}>\r\n                        {this.state.data.length === 0 ? \r\n                        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100px' }}>\r\n                            {t(\"movie.recoNone\")}\r\n                            </div> : data_arr}\r\n                    </Row>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withTranslation()(RecommendedMovies);","D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\Comments.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\LandingPage\\Sections\\StyledSearchBar.js",[],"D:\\temp\\movie_temp\\client\\src\\_actions\\types.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\ReplyComment.js",[],"D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\SingleComment.js",[],["194","195"],"D:\\temp\\movie_temp\\client\\src\\components\\views\\MovieDetail\\Sections\\Favorite.js",["196","197"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Button } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PopcornIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_1804216_05evm2uwptc9.js',\r\n});\r\n\r\nconst PopcornColorIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_1804216_c1v18kzse7b.js',\r\n});\r\n\r\nfunction Favorite(props) {\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const user = useSelector(state => state.user)\r\n\r\n    const movieId = props.movieId\r\n    const userFrom = props.userFrom\r\n    const movieTitle = props.movieInfo.title\r\n    const moviePost = props.movieInfo.backdrop_path\r\n    const movieRunTime = props.movieInfo.runtime\r\n\r\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\r\n    const [Favorited, setFavorited] = useState(false)\r\n    const variables = {\r\n        movieId: movieId,\r\n        userFrom: userFrom,\r\n        movieTitle: movieTitle,\r\n        moviePost: moviePost,\r\n        movieRunTime: movieRunTime\r\n    }\r\n\r\n    const onClickFavorite = () => {\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return history.push(\"/\");\r\n        }\r\n\r\n        if (Favorited) {\r\n            //when we are already subscribed \r\n            axios.post('/api/favorite/removeFromFavorite', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setFavoriteNumber(FavoriteNumber - 1)\r\n                        setFavorited(!Favorited)\r\n                    } else {\r\n                        history.push(\"/\");\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            // when we are not subscribed yet\r\n\r\n            axios.post('/api/favorite/addToFavorite', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setFavoriteNumber(FavoriteNumber + 1)\r\n                        setFavorited(!Favorited)\r\n                    } else {\r\n                        history.push(\"/\");\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        const fetchFavoriteNumber = () => {\r\n            axios.post('/api/favorite/favoriteNumber', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        mounted && setFavoriteNumber(response.data.subscribeNumber)\r\n                    } else {\r\n                        history.push(\"/\");\r\n                    }\r\n                })\r\n                .catch((\r\n                    error => { console.log(error) }\r\n                ))\r\n        }\r\n        fetchFavoriteNumber();\r\n        return () => { mounted = false; }\r\n    }, [props, history, variables])\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        const fetchFavorited = () => {\r\n            axios.post('/api/favorite/favorited', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        mounted && setFavorited(response.data.subcribed)\r\n                    } else {\r\n                        history.push(\"/\");\r\n                    }\r\n                })\r\n        }\r\n        fetchFavorited();\r\n        return () => {mounted = false;}\r\n    }, [props, variables, history])\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" onClick={onClickFavorite}>\r\n                {!Favorited ? t('favorites.add') : t('favorites.remove')}{!Favorited ? <PopcornIcon type=\"icon-popcorn\" style={{ fontSize: \"20px\" }} />\r\n                    : <PopcornColorIcon type=\"icon-popcorn1\" style={{ fontSize: \"20px\" }} />}{FavoriteNumber}\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Favorite\r\n\r\n",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":25,"column":9,"nodeType":"204","messageId":"205","endLine":25,"endColumn":24},{"ruleId":"202","severity":1,"message":"206","line":4,"column":69,"nodeType":"204","messageId":"205","endLine":4,"endColumn":84},{"ruleId":"207","severity":1,"message":"208","line":15,"column":6,"nodeType":"209","endLine":15,"endColumn":19},{"ruleId":"207","severity":1,"message":"210","line":15,"column":6,"nodeType":"209","endLine":15,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":19,"nodeType":"204","messageId":"205","endLine":2,"endColumn":34},{"ruleId":"202","severity":1,"message":"206","line":2,"column":19,"nodeType":"204","messageId":"205","endLine":2,"endColumn":34},{"ruleId":"198","replacedBy":"211"},{"ruleId":"200","replacedBy":"212"},{"ruleId":"207","severity":1,"message":"213","line":30,"column":11,"nodeType":"209","endLine":36,"endColumn":6},{"ruleId":"207","severity":1,"message":"214","line":30,"column":11,"nodeType":"209","endLine":36,"endColumn":6},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'initialUsername' is assigned a value but never used.","Identifier","unusedVar","'CurrentLanguage' is defined but never used.","react-hooks/exhaustive-deps","The 'variable' object makes the dependencies of useEffect Hook (at line 37) change on every render. To fix this, wrap the initialization of 'variable' in its own useMemo() Hook.","VariableDeclarator","The 'variable' object makes the dependencies of useEffect Hook (at line 53) change on every render. To fix this, wrap the initialization of 'variable' in its own useMemo() Hook.",["215"],["216"],"The 'variables' object makes the dependencies of useEffect Hook (at line 88) change on every render. To fix this, wrap the initialization of 'variables' in its own useMemo() Hook.","The 'variables' object makes the dependencies of useEffect Hook (at line 104) change on every render. To fix this, wrap the initialization of 'variables' in its own useMemo() Hook.","no-global-assign","no-unsafe-negation"]